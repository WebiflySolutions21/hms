name: Deploy to Hosting

on:
  push:
    branches:
      - test
  pull_request:
    types:
      - merged
      - closed
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üöÄ Checkout Repository
        uses: actions/checkout@v4

      - name: ‚ö° Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: üì¶ Install Dependencies & Build Frontend
        run: |
          cd frontend
          npm ci
          npm run build:prod

      - name: üõ†Ô∏è Setup PHP and Install Dependencies Locally
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          tools: composer

      - name: üì¶ Install PHP Dependencies
        run: |
          cd backend
          composer install --no-dev --optimize-autoloader

      - name: üîë Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: üîç Set Deployment Path
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "FRONTEND_DEPLOY_PATH=domains/webiflysolutions.com/public_html/new_hms" >> $GITHUB_ENV
            echo "BACKEND_DEPLOY_PATH=domains/webiflysolutions.com/public_html/new_hms/backend" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/test" ]]; then
            echo "FRONTEND_DEPLOY_PATH=domains/webiflysolutions.com/public_html/new_hms/new_hms_test" >> $GITHUB_ENV
            echo "BACKEND_DEPLOY_PATH=domains/webiflysolutions.com/public_html/new_hms/new_hms_test/backend" >> $GITHUB_ENV
          else
            echo "‚ùå Unsupported branch, skipping deployment!" && exit 1
          fi

      - name: üîç Check if Deployment Folders Exist on Server
        run: |
          ssh -p ${{ secrets.SSH_PORT }} -i ~/.ssh/id_rsa ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "[[ -d $FRONTEND_DEPLOY_PATH ]]" || { echo '‚ùå Frontend target directory does not exist!'; exit 1; }
          ssh -p ${{ secrets.SSH_PORT }} -i ~/.ssh/id_rsa ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "[[ -d $BACKEND_DEPLOY_PATH ]]" || { echo '‚ùå Backend target directory does not exist!'; exit 1; }

      - name: üßπ Clean Frontend Server Directory
        run: |
          ssh -p ${{ secrets.SSH_PORT }} -i ~/.ssh/id_rsa ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd $FRONTEND_DEPLOY_PATH

            # Delete everything except .env, new_hms_test, and backend
            find . -mindepth 1 -maxdepth 1 ! -name '.env' ! -name 'new_hms_test' ! -name 'backend' -exec rm -rf {} +

            echo "‚úÖ Cleaned frontend deploy path while preserving .env, new_hms_test/, and backend/"
          EOF

      - name: üßπ Clean Backend Server Directory
        run: |
          ssh -p ${{ secrets.SSH_PORT }} -i ~/.ssh/id_rsa ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd $BACKEND_DEPLOY_PATH

            # Delete everything except .env, new_hms_test, and backend
            find . -mindepth 1 -maxdepth 1 ! -name '.env' ! -name 'new_hms_test' ! -name 'backend' -exec rm -rf {} +

            echo "‚úÖ Cleaned backend deploy path while preserving .env, new_hms_test/, and backend/"
          EOF

      - name: üìÇ Deploy Frontend to Server using SSH
        run: |
          rsync -avz --progress -e "ssh -p ${{ secrets.SSH_PORT }} -i ~/.ssh/id_rsa" frontend/dist/ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:$FRONTEND_DEPLOY_PATH

      - name: üìÇ Deploy Backend to Server using SSH
        run: |
          rsync -avz --progress -e "ssh -p ${{ secrets.SSH_PORT }} -i ~/.ssh/id_rsa" backend/ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:$BACKEND_DEPLOY_PATH

      - name: üîÑ Run Migrations and Seed Database
        run: |
          ssh -t -p ${{ secrets.SSH_PORT }} -i ~/.ssh/id_rsa ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "cd $BACKEND_DEPLOY_PATH && php artisan migrate --seed --force"